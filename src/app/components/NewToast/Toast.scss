%default-toast {
    // You indicate a placeholder selected with a preceding '%'
    position: relative;
    top: 0;
    right: 0;
    margin: 1rem;
    display: inline-flex;
    min-width: 260px;
    min-height: 60px;
    max-height: 60px;
    box-shadow: 6px 6px 12px #00000040;

    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
    // border-left: 6px solid black;
    background-color: var(--color-info);
    padding: 1.5rem;
    border-radius: 4px;
    font-size: 0.9rem;

    button {
        border-radius: 8px;
        color: #fff;
        background-color: transparent;
        border: none;
        box-shadow: none;
        min-height: 36px;
        font-size: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        padding: 4px 8px !important;
    }

    &.close {
        right: -200%;
    }

    &.open {
        right: 0;
    }

    .toast-interior {
        color: white;
    }
}

// Default toast
.toast {
    @extend %default-toast; // You then add the styles to another selector with the @extend decorator
}

// Now we can make our state-specific classes

// Success
.success-toast {
    @extend %default-toast;
    // border-left: 6px solid var(--color-success);
    background-color: var(--color-success);



}

// Warning
.warning-toast {
    @extend %default-toast;
    background-color: var(--color-warning);
}

// Error
.error-toast {
    @extend %default-toast;
    background-color: var(--color-error);
}

.info-toast {
    @extend %default-toast;
    background-color: var(--color-info);
}


.toast-close {
    &::before {
        content: '\2715';
        color: white;
    }
}